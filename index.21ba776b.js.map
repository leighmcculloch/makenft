{"mappings":"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","sources":["src/index.js","node_modules/array-buffer-to-hex/index.js","src/wallet-freighter.js","node_modules/@stellar/freighter-api/build/webpack:/freighterApi/webpack/universalModuleDefinition","node_modules/@stellar/freighter-api/build/webpack:/freighterApi/webpack/bootstrap","node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/Users/piyalbasu/Stellar/lyra/@shared/constants/services.ts","node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/Users/piyalbasu/Stellar/lyra/@shared/constants/stellar.ts","node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/Users/piyalbasu/Stellar/lyra/@shared/constants/errors.ts","node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/Users/piyalbasu/Stellar/lyra/@shared/api/helpers/extensionMessaging.ts","node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/Users/piyalbasu/Stellar/lyra/@stellar/freighter-api/src/getPublicKey.ts","node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/Users/piyalbasu/Stellar/lyra/@shared/api/external.ts","node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/Users/piyalbasu/Stellar/lyra/@stellar/freighter-api/src/signTransaction.ts","node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/Users/piyalbasu/Stellar/lyra/@stellar/freighter-api/src/isConnected.ts","node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/Users/piyalbasu/Stellar/lyra/@stellar/freighter-api/src/getNetwork.ts","node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/Users/piyalbasu/Stellar/lyra/@stellar/freighter-api/src/index.ts"],"sourcesContent":["import StellarSdk from 'stellar-sdk';\nimport arrayBufferToHex from 'array-buffer-to-hex';\nimport * as ipfsCore from 'ipfs-core';\nimport * as config from './config.js';\nimport * as wallet from './wallet-freighter.js';\n// import * as wallet from './wallet-rabet.js';\n\nfunction getConfig() {\n    const network = document.getElementById(\"network\").value;\n    return config.getConfig(network);\n}\n\nwindow.init = wrapErrorHandling(init);\nwindow.add = wrapErrorHandling(add);\nwindow.create = wrapErrorHandling(create);\nwindow.view = wrapErrorHandling(view);\nwindow.upload = wrapErrorHandling(upload);\n\nfunction wrapErrorHandling(f) {\n    return async () => {\n        try {\n            await f();\n        } catch (error) {\n            resultError(error.error || error);\n            document.getElementById(\"create-button\").removeAttribute(\"disabled\");\n            document.getElementById(\"view-button\").removeAttribute(\"disabled\");\n            throw error;\n        }\n    };\n}\n\nfunction resultReset() {\n    const result = document.getElementById(\"result\");\n    result.innerText = \"\";\n    result.classList.add(\"d-none\");\n}\n\nfunction resultError(error) {\n    const result = document.getElementById(\"result\");\n    result.innerText = error.toString();\n    result.classList.remove(\"d-none\");\n    result.classList.remove(\"alert-success\");\n    result.classList.add(\"alert-danger\");\n}\n\nfunction resultSuccess(html) {\n    const result = document.getElementById(\"result\");\n    result.innerHTML = html;\n    result.classList.remove(\"d-none\");\n    result.classList.remove(\"alert-danger\");\n    result.classList.add(\"alert-success\");\n}\n\nasync function init() {\n    const walletButton = document.getElementById(\"wallet-button\");\n    if (wallet.isConnected()) {\n        walletButton.classList.add(\"d-none\");\n        document.getElementById(\"create-button\").classList.add(\"d-block\");\n        document.getElementById(\"view-button\").classList.add(\"d-block\");\n    } else {\n        walletButton.innerText = \"Add the Freighter extension to Chrome\";\n        window.setTimeout(init, 500);\n    }\n}\n\nasync function add() {\n    init();\n    if (!wallet.isConnected()) {\n        window.open(\"https://freighter.app\", \"_blank\", \"noopener\");\n    }\n}\n\nasync function create() {\n    resultReset();\n    document.getElementById(\"create-button\").setAttribute(\"disabled\", \"disabled\");\n    document.getElementById(\"view-button\").setAttribute(\"disabled\", \"disabled\");\n\n    const { code, issuer, xdr } = await build();\n    const signedXdr = await wallet.signTransaction(xdr, getConfig().network);\n    console.log(`Transaction signed: ${signedXdr}`);\n    const signedTransaction = StellarSdk.TransactionBuilder.fromXDR(signedXdr, getConfig().networkPassphrase);\n    const result = await getConfig().horizonServer.submitTransaction(signedTransaction);\n    console.log(result);\n    resultSuccess(`🎉 View your NFT <a href=\"${getConfig().viewUrl(code, issuer)}\">here</a>.`);\n\n    document.getElementById(\"create-button\").removeAttribute(\"disabled\");\n    document.getElementById(\"view-button\").removeAttribute(\"disabled\");\n}\n\nasync function view() {\n    resultReset();\n    document.getElementById(\"create-button\").setAttribute(\"disabled\", \"disabled\");\n    document.getElementById(\"view-button\").setAttribute(\"disabled\", \"disabled\");\n\n    const { xdr } = await build();\n    const url = `https://laboratory.stellar.org/#xdr-viewer?type=TransactionEnvelope&input=${encodeURIComponent(xdr)}`;\n    window.open(url, \"_blank\", \"noopener\");\n\n    document.getElementById(\"create-button\").removeAttribute(\"disabled\");\n    document.getElementById(\"view-button\").removeAttribute(\"disabled\");\n}\n\nlet ipfsNode = null;\nasync function getIpfsNode() {\n    if (ipfsNode !== null) {\n        return ipfsNode;\n    }\n    ipfsNode = await ipfsCore.create();\n    return ipfsNode;\n}\n\nasync function build() {\n    const code = document.getElementById(\"code\").value;\n    const quantity = document.getElementById(\"quantity\").value;\n    const fileUpload = document.getElementById(\"file-upload\");\n    const description = document.getElementById(\"description\").value;\n\n    let nftAssetUrl = [];\n    let nftAssetHash = null;\n    if (fileUpload.files.length > 0) {\n        const file = fileUpload.files[0];\n        const buffer = await new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onloadend = () => resolve(reader.result);\n            reader.onerror = (error) => reject(error);\n            reader.readAsArrayBuffer(file);\n        });\n        const ipfsNode = await getIpfsNode();\n        const { cid } = await ipfsNode.add(buffer)\n        const url = `ipfs://${cid.string}`;\n        nftAssetUrl = url;\n        nftAssetHash = await crypto.subtle.digest(\"SHA-256\", buffer);\n    }\n\n    const issuerKey = StellarSdk.Keypair.random();\n\n    let nftMetaUrlParts = null;\n    let nftMetaHash = null;\n    if (description.length > 0) {\n        const meta = {\n            \"name\": code,\n            \"description\": description,\n            \"url\": nftAssetUrl,\n            \"sha256\": arrayBufferToHex(nftAssetHash),\n            \"issuer\": issuerKey.publicKey(),\n            \"code\": code,\n        }\n        const metaJson = JSON.stringify(meta, null, \"\\t\");\n        const metaEncoder = new TextEncoder();\n        const metaData = metaEncoder.encode(metaJson);\n        const ipfsNode = await getIpfsNode();\n        const { cid } = await ipfsNode.add(metaData)\n        const url = `ipfs://${cid.string}`;\n        nftMetaUrlParts = url.match(/.{1,64}/g);\n        nftMetaHash = await crypto.subtle.digest(\"SHA-256\", metaData);\n    }\n\n    const asset = new StellarSdk.Asset(code, issuerKey.publicKey());\n\n    const accountPublicKey = await wallet.getPublicKey();\n    const account = await (async () => {\n        try {\n            return await getConfig().horizonServer.loadAccount(accountPublicKey);\n        } catch {\n            throw new Error(`Your account ${accountPublicKey} does not exist on the Stellar ${getConfig().network} network. It must be created before it can be used to submit transactions.`);\n        }\n    })();\n    const fee = await getConfig().horizonServer.fetchBaseFee();\n\n    const transaction = new StellarSdk.TransactionBuilder(account, { fee, networkPassphrase: getConfig().networkPassphrase });\n    transaction.setTimeout(300);\n    transaction.addMemo(StellarSdk.Memo.text(`Create ${code} NFT ✨`));\n    transaction.addOperation(StellarSdk.Operation.beginSponsoringFutureReserves({ sponsoredId: issuerKey.publicKey() }));\n    transaction.addOperation(StellarSdk.Operation.createAccount({ destination: issuerKey.publicKey(), startingBalance: \"0\" }));\n    if (nftMetaUrlParts.length == 1) {\n        transaction.addOperation(StellarSdk.Operation.manageData({\n            source: issuerKey.publicKey(),\n            name: `nft.meta.url`,\n            value: nftMetaUrlParts[0],\n        }));\n    } else {\n        for (let i = 0; i < nftMetaUrlParts.length; i++) {\n            transaction.addOperation(StellarSdk.Operation.manageData({\n                source: issuerKey.publicKey(),\n                name: `nft.meta.url[${i}]`,\n                value: nftMetaUrlParts[i],\n            }));\n        }\n    }\n    if (nftMetaHash) {\n        transaction.addOperation(StellarSdk.Operation.manageData({\n            source: issuerKey.publicKey(),\n            name: `nft.meta.sha256`,\n            value: arrayBufferToHex(nftMetaHash),\n        }));\n    }\n    transaction.addOperation(StellarSdk.Operation.endSponsoringFutureReserves({ source: issuerKey.publicKey() }))\n    transaction.addOperation(StellarSdk.Operation.changeTrust({ asset: asset, limit: quantity }));\n    transaction.addOperation(StellarSdk.Operation.payment({ source: issuerKey.publicKey(), destination: accountPublicKey, asset: asset, amount: quantity }));\n    transaction.addOperation(StellarSdk.Operation.setOptions({ source: issuerKey.publicKey(), masterWeight: 0 }));\n\n    const transactionBuilt = transaction.build();\n    transactionBuilt.sign(issuerKey);\n    const xdr = transactionBuilt.toEnvelope().toXDR('base64');\n    console.log(`Transaction built: ${xdr}`);\n\n    return { code, issuer: issuerKey.publicKey(), xdr };\n}\n\nasync function upload() {\n    const fileUpload = document.getElementById(\"file-upload\");\n\n    const fileLabel = document.getElementById(\"file-label\");\n    fileLabel.innerText = \"\";\n\n    const filePreviewGroup = document.getElementById(\"file-preview-group\");\n    const filePreview = document.getElementById(\"file-preview\");\n    while (filePreview.firstChild) {\n        filePreview.removeChild(filePreview.firstChild);\n    }\n    if (fileUpload.files.length > 0) {\n        const file = fileUpload.files[0];\n        const filename = fileUpload.value.replace(\"C:\\\\fakepath\\\\\", \"\");\n        const sizeKB = file.size / 1024;\n        fileLabel.innerText = `${filename} (${sizeKB} KB)`;\n\n        const fileUrl = window.URL.createObjectURL(file);\n        const preview = document.createElement(\"img\");\n        preview.src = fileUrl;\n        filePreview.appendChild(preview);\n        filePreviewGroup.classList.remove(\"d-none\");\n    } else {\n        filePreviewGroup.classList.add(\"d-none\");\n    }\n}\n\ninit();\n","module.exports = function arrayBufferToHex (arrayBuffer) {\n  if (typeof arrayBuffer !== 'object' || arrayBuffer === null || typeof arrayBuffer.byteLength !== 'number') {\n    throw new TypeError('Expected input to be an ArrayBuffer')\n  }\n\n  var view = new Uint8Array(arrayBuffer)\n  var result = ''\n  var value\n\n  for (var i = 0; i < view.length; i++) {\n    value = view[i].toString(16)\n    result += (value.length === 1 ? '0' + value : value)\n  }\n\n  return result\n}\n","import freighterApi from \"@stellar/freighter-api\";\n\nexport function isConnected() {\n    return freighterApi.isConnected();\n}\n\nexport async function getPublicKey() {\n    return await freighterApi.getPublicKey();\n}\n\nexport async function signTransaction(xdr, network) {\n    let freighterNetwork = undefined;\n    switch (network) {\n        case \"testnet\":\n            freighterNetwork = \"TESTNET\";\n            break;\n        case \"pubnet\":\n            freighterNetwork = \"PUBLIC\";\n            break;\n        default:\n            throw `Network '${network} unsupported by Freighter. Only pubnet and testnet are supported.`;\n    }\n    return await freighterApi.signTransaction(xdr, freighterNetwork);\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"freighterApi\"] = factory();\n\telse\n\t\troot[\"freighterApi\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export enum SERVICE_TYPES {\n  CREATE_ACCOUNT = \"CREATE_ACCOUNT\",\n  FUND_ACCOUNT = \"FUND_ACCOUNT\",\n  ADD_ACCOUNT = \"ADD_ACCOUNT\",\n  IMPORT_ACCOUNT = \"IMPORT_ACCOUNT\",\n  LOAD_ACCOUNT = \"LOAD_ACCOUNT\",\n  MAKE_ACCOUNT_ACTIVE = \"MAKE_ACCOUNT_ACTIVE\",\n  UPDATE_ACCOUNT_NAME = \"UPDATE_ACCOUNT_NAME\",\n  GET_MNEMONIC_PHRASE = \"GET_MNEMONIC_PHRASE\",\n  CONFIRM_MNEMONIC_PHRASE = \"CONFIRM_MNEMONIC_PHRASE\",\n  RECOVER_ACCOUNT = \"RECOVER_ACCOUNT\",\n  CONFIRM_PASSWORD = \"CONFIRM_PASSWORD\",\n  REJECT_ACCESS = \"REJECT_ACCESS\",\n  GRANT_ACCESS = \"GRANT_ACCESS\",\n  SIGN_TRANSACTION = \"SIGN_TRANSACTION\",\n  REJECT_TRANSACTION = \"REJECT_TRANSACTION\",\n  SIGN_OUT = \"SIGN_OUT\",\n  SHOW_BACKUP_PHRASE = \"SHOW_BACKUP_PHRASE\",\n  SAVE_SETTINGS = \"SAVE_SETTINGS\",\n  LOAD_SETTINGS = \"LOAD_SETTINGS\",\n  GET_CACHED_ASSET_ICON = \"GET_CACHED_ASSET_ICON\",\n  CACHE_ASSET_ICON = \"CACHE_ASSET_ICON\",\n}\n\nexport enum EXTERNAL_SERVICE_TYPES {\n  REQUEST_ACCESS = \"REQUEST_ACCESS\",\n  SUBMIT_TRANSACTION = \"SUBMIT_TRANSACTION\",\n  REQUEST_NETWORK = \"REQUEST_NETWORK\",\n}\n\nexport const EXTERNAL_MSG_REQUEST = \"FREIGHTER_EXTERNAL_MSG_REQUEST\";\nexport const EXTERNAL_MSG_RESPONSE = \"FREIGHTER_EXTERNAL_MSG_RESPONSE\";\n\ndeclare const DEV_SERVER: string;\nconst _DEV_SERVER = DEV_SERVER;\nexport { _DEV_SERVER as DEV_SERVER };\n","export enum NETWORK_NAMES {\n  TESTNET = \"Test network\",\n  PUBNET = \"Public network\",\n}\n\nexport enum NETWORKS {\n  PUBLIC = \"PUBLIC\",\n  TESTNET = \"TESTNET\",\n}\n","export class NoExtensionInstalledError extends Error {\n  message = \"Freighter does not appear to be installed.\";\n}\n","import { browser } from \"webextension-polyfill-ts\";\nimport {\n  DEV_SERVER,\n  EXTERNAL_MSG_RESPONSE,\n  EXTERNAL_MSG_REQUEST,\n} from \"../../constants/services\";\nimport { Response } from \"../types\";\nimport { NoExtensionInstalledError } from \"../../constants/errors\";\n\nexport const sendMessageToContentScript = (msg: {}): Promise<Response> => {\n  /* \n    In the case of multiple calls coming in sequentially, we use this MESSAGE_ID to make sure we're responding to\n    the appropriate message sender. Otherwise, we can run into race conditions where we simply resolve all \n    sent messages with the first thing that comes back.\n  */\n  const MESSAGE_ID = Date.now() + Math.random();\n\n  window.postMessage(\n    { source: EXTERNAL_MSG_REQUEST, messageId: MESSAGE_ID, ...msg },\n    window.location.origin,\n  );\n  return new Promise((resolve, reject) => {\n    if (!window.freighter) {\n      reject(new NoExtensionInstalledError());\n    }\n\n    const messageListener = (event: { source: any; data: Response }) => {\n      // We only accept messages from ourselves\n      if (event.source !== window) return;\n      // Only respond to messages tagged as being from our content script\n      if (event?.data?.source !== EXTERNAL_MSG_RESPONSE) return;\n      // Only respond to messages that this instance of sendMessageToContentScript sent\n      if (event?.data?.messagedId !== MESSAGE_ID) return;\n\n      resolve(event.data);\n      window.removeEventListener(\"message\", messageListener);\n    };\n    window.addEventListener(\"message\", messageListener, false);\n  });\n};\n\nexport const sendMessageToBackground = async (msg: {}): Promise<Response> => {\n  let res;\n  if (DEV_SERVER) {\n    // treat this as an external call because we're making the call from the browser, not the popup\n    res = await sendMessageToContentScript(msg);\n  } else {\n    res = await browser.runtime.sendMessage(msg);\n  }\n\n  return res;\n};\n","import { requestPublicKey } from \"@shared/api/external\";\n\nexport const getPublicKey = () => requestPublicKey();\n","import { EXTERNAL_SERVICE_TYPES } from \"../constants/services\";\nimport { NETWORKS } from \"../constants/stellar\";\nimport { sendMessageToContentScript } from \"./helpers/extensionMessaging\";\n\nexport const requestPublicKey = async (): Promise<string> => {\n  let response = { publicKey: \"\", error: \"\" };\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_ACCESS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { publicKey, error } = response;\n\n  if (error) {\n    throw error;\n  }\n  return publicKey;\n};\n\nexport const submitTransaction = async (\n  transactionXdr: string,\n  network?: string,\n): Promise<string> => {\n  let response = { signedTransaction: \"\", error: \"\" };\n  if (network && network !== NETWORKS.PUBLIC && network !== NETWORKS.TESTNET) {\n    const error = `Network must be ${NETWORKS.PUBLIC} or ${NETWORKS.TESTNET}`;\n    throw error;\n  }\n  try {\n    response = await sendMessageToContentScript({\n      transactionXdr,\n      network,\n      type: EXTERNAL_SERVICE_TYPES.SUBMIT_TRANSACTION,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n  const { signedTransaction, error } = response;\n\n  if (error) {\n    throw error;\n  }\n  return signedTransaction;\n};\n\nexport const requestNetwork = async (): Promise<string> => {\n  let response = { network: \"\", error: \"\" };\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_NETWORK,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { network, error } = response;\n\n  if (error) {\n    throw error;\n  }\n  return network;\n};\n","import { submitTransaction } from \"@shared/api/external\";\n\nexport const signTransaction = (\n  transactionXdr: string,\n  network?: \"PUBLIC\" | \"TESTNET\"\n) => submitTransaction(transactionXdr, network);\n","export const isConnected = () => !!window.freighter;\n","import { requestNetwork } from \"@shared/api/external\";\n\nexport const getNetwork = () => requestNetwork();\n","import { getPublicKey } from \"./getPublicKey\";\nimport { signTransaction } from \"./signTransaction\";\nimport { isConnected } from \"./isConnected\";\nimport { getNetwork } from \"./getNetwork\";\n\nexport { getPublicKey, signTransaction, isConnected, getNetwork };\nexport default { getPublicKey, signTransaction, isConnected, getNetwork };\n"],"names":["_stellarSdk","require","_arrayBufferToHex","_ipfsCore","_configJs","_walletFreighterJs","getConfig","network","document","getElementById","value","wrapErrorHandling","f","async","error","result","innerText","toString","classList","remove","add","resultError","removeAttribute","resultReset","init","walletButton","isConnected","window","setTimeout","open","create","setAttribute","code","issuer","xdr","build","signedXdr","signTransaction","console","log","signedTransaction","_stellarSdkDefault","default","TransactionBuilder","fromXDR","networkPassphrase","horizonServer","submitTransaction","html","innerHTML","resultSuccess","viewUrl","view","url","encodeURIComponent","upload","fileUpload","fileLabel","filePreviewGroup","filePreview","firstChild","removeChild","files","length","file","filename","replace","sizeKB","size","fileUrl","URL","createObjectURL","preview","createElement","src","appendChild","ipfsNode","getIpfsNode","quantity","description","nftAssetUrl","nftAssetHash","buffer","Promise","resolve","reject","reader","FileReader","onloadend","onerror","readAsArrayBuffer","ipfsNode1","cid","string","crypto","subtle","digest","issuerKey","Keypair","random","nftMetaUrlParts","nftMetaHash","meta","name","sha256","_arrayBufferToHexDefault","publicKey","metaJson","JSON","stringify","metaData","TextEncoder","encode","ipfsNode2","match","asset","Asset","accountPublicKey","getPublicKey","account","loadAccount","Error","fee","fetchBaseFee","transaction","addMemo","Memo","text","addOperation","Operation","beginSponsoringFutureReserves","sponsoredId","createAccount","destination","startingBalance","manageData","source","i","endSponsoringFutureReserves","changeTrust","limit","payment","amount","setOptions","masterWeight","transactionBuilt","sign","toEnvelope","toXDR","module","exports","arrayBuffer","byteLength","TypeError","Uint8Array","_freighterApi","_freighterApiDefault","freighterNetwork","root","factory","this","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","t","mode","__esModule","ns","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SERVICE_TYPES","EXTERNAL_SERVICE_TYPES","NETWORK_NAMES","NETWORKS","CREATE_ACCOUNT","e","FUND_ACCOUNT","ADD_ACCOUNT","IMPORT_ACCOUNT","LOAD_ACCOUNT","MAKE_ACCOUNT_ACTIVE","UPDATE_ACCOUNT_NAME","GET_MNEMONIC_PHRASE","CONFIRM_MNEMONIC_PHRASE","RECOVER_ACCOUNT","CONFIRM_PASSWORD","REJECT_ACCESS","GRANT_ACCESS","SIGN_TRANSACTION","REJECT_TRANSACTION","SIGN_OUT","SHOW_BACKUP_PHRASE","SAVE_SETTINGS","LOAD_SETTINGS","GET_CACHED_ASSET_ICON","CACHE_ASSET_ICON","REQUEST_ACCESS","SUBMIT_TRANSACTION","REQUEST_NETWORK","TESTNET","PUBNET","PUBLIC","NoExtensionInstalledError","message","sendMessageToContentScript","msg","MESSAGE_ID","Date","now","Math","postMessage","messageId","location","origin","freighter","messageListener","event","data","T","messagedId","removeEventListener","addEventListener","response","type","transactionXdr","getNetwork","r1","t2","A","S","_","u","define","amd","freighterApi"],"version":3,"file":"index.21ba776b.js.map"}